from langchain.agents import initialize_agent, AgentType
from langchain.callbacks import StreamlitCallbackHandler
from langchain.chat_models import ChatOpenAI
from langchain.tools import DuckDuckGoSearchRun, google_serper, google_search
import streamlit as st
from langchain_google_genai import ChatGoogleGenerativeAI, GoogleGenerativeAIEmbeddings
from crewai_tools import (YoutubeChannelSearchTool,WebsiteSearchTool,YoutubeVideoSearchTool,CodeInterpreterTool,
     ScrapeWebsiteTool,SeleniumScrapingTool,SerperDevTool, CSVSearchTool, DirectoryReadTool, FileReadTool, PDFSearchTool)
from dotenv import  load_dotenv
load_dotenv()
import os
os.environ["OPENAI_API_KEY"] = os.environ.get('GOOGLE_API_KEY')
from dotenv import  load_dotenv
load_dotenv()
from News.news_and_marketing import CrewStocknews, CrewMarketAnalysis
from app import germinApiKey, SerpApiKey
germin_key =  germinApiKey()
import os
import pandas as pd


def getCrewAIMarketAnalysis(customer_domain,project_description):
    try:
        germin_key= germinApiKey()
        serp_key=SerpApiKey()
        yr = pd.to_datetime('today').year
        results= CrewMarketAnalysis( germin_key, serp_key,yr,customer_domain,project_description)
        return results
    except Exception as error:
        return  error
@st.cache_resource
def getCrewAINews(topic):
    try:
        date=pd.to_datetime('today').date()
        yr = pd.to_datetime('today').year
        germin_key= germinApiKey()
        serp_key=SerpApiKey()
        results=CrewStocknews( germin_key, serp_key,topic,yr,date)
        return results
    except Exception as error:
        return  error

tab1, tab2 = st.tabs(["News Article","Marketing Compaing"])
with (tab1):

    st.header("Stock News Artikel generated by AI  Expert Agents")
    topic = st.text_input(
        "Topic Would you like to get news for",
        key='topic'
        ,
    )


    try:
         if topic:
           st.markdown(getCrewAINews(topic))

    except Exception as error:
         st.error(error)
with (tab2):

    st.header("Marketing Compaing ")
    domain = st.text_input(
        "Topic Would you like to get news for",
        key='domain'
        ,
    )
    project = st.text_area(
        "Topic Would you like to get news for",
        key='project'
        ,
    )



    try:
         if project and  domain:
             st.markdown(getCrewAIMarketAnalysis( domain,project ))

    except Exception as error:
         st.error(error)

